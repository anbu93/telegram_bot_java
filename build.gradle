group 'com.vova_cons'
version = getVersionFromFile()

apply plugin: 'java'

sourceCompatibility = 1.8

sourceSets.main.java.srcDirs = [ "src/main/java" ]
sourceSets.main.resources {
    srcDirs = ["src/main/resources"]
    //exclude "**/*.java"
}

buildscript {
    project.version = getVersion()
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "org.telegram:telegrambots:3.4"
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.vova_cons.telegram_bot_framework.test.Main'
        )
    }
    from configurations.compile.collect { entry -> zipTree(entry) }
}


task printVersion {
    doLast {
        project.version = getVersion()
        println project.version
    }
}

task incrementVersion {
    doLast {
        def _major = 0
        def _minor = 0
        def _patch = 0

        def versionPropsFile = file('version.properties')

        if (versionPropsFile.canRead()) {
            def Properties versionProps = new Properties()

            versionProps.load(new FileInputStream(versionPropsFile))

            _major = versionProps['MAJOR'].toInteger()
            _minor = versionProps['MINOR'].toInteger()
            _patch = versionProps['PATCH'].toInteger() + 1

            versionProps['MAJOR'] = _major.toString()
            versionProps['MINOR'] = _minor.toString()
            versionProps['PATCH'] = _patch.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new GradleException("Could not read version.properties!")
        }
        project.version = "${_major}.${_minor}.${_patch}"
    }
}

def getVersionFromFile() {
    def versionPropsFile = file('version.properties')

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def _major = versionProps['MAJOR'].toInteger()
        def _minor = versionProps['MINOR'].toInteger()
        def _patch = versionProps['PATCH'].toInteger()

        return "${_major}.${_minor}.${_patch}"
    }
    return '0.0.0'
}